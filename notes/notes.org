#+title: Karachentsev List notes
#+bibliography: "../My Library/My Library.bib"
#+PROPERTY: header-args :lang python :eval python :exports results :tangle final.py :results output drawer :session main

This list contains measurements from the galaxies in the Local Cosmological Volume (LCV), and the last update of data is on 2023-06-30. I downloaded the database from [cite:@karachentsevUPDATEDNEARBYGALAXY2013]

* Original data set

The data I will use for this project come from the Karachentsev  catalog (2022-12-02), which is an updated version of the list used in Kroupa et al. 2020
From the list I use the tables "Catalog of Nearby Galaxies", "Global Parameters of the Nearby Galaxies" and "List of the nearby galaxies with measured SFR"

#+begin_src python :results value

import numpy as np
from astropy.io import ascii
from astropy.coordinates import SkyCoord, ICRS, Galactic, FK4, FK5, Angle
from astropy.table import Table, QTable, join, hstack, unique, Column
from astropy.time import Time
import astropy.units as u
from astropy.utils.diff import report_diff_values

file_pattern = "../list/lvg_table*.dat"

# Use glob to find all matching files
file_paths = glob.glob(file_pattern)

comb_data = None  # Initialize an empty table

for file_path in file_paths:
    data = QTable(ascii.read(file_path, format="mrt"))
    if comb_data is None:
        # Set the first data as comb_data if it's None
        comb_data = data
    else:
        # Join subsequent data with comb_data based on 'Name'
        comb_data = QTable(join(comb_data, data, keys="Name", join_type="outer" ))

comb_data.info()
#+end_src

#+RESULTS:
: None


#+begin_src python


for table in file_paths:
    data = ascii.read(table)
    comb_data_1 = comb_data_1.add_column(data)


#+end_src

#+RESULTS:

* IDEA
if WARNING then compare
    if same then merge
        elif change units
        else different columns

#+begin_src python
t = Table()
t['index'] = [1, 2]
t['time'] = Time(['2001-01-02T12:34:56', '2001-02-03T00:01:02'])
t['velocity'] = [3, 4] * u.km / u.s

qt = QTable(t)
(qt["velocity"]**2).unit

#+end_src

#+RESULTS:
: km2 / s2



** Join the tables

#+begin_src python

# Find common columns among all tables
common_columns = set(tables[0].colnames)

for table in tables[1:]:
    common_columns.intersection_update(table.colnames)

# Initialize the result_table with the first table
dt = tables[0]

# Loop through the common columns and join tables
for column in common_columns:
    dt = Table.join(dt, tables[1], keys=column, join_type = "outer")

dt.info()

#+end_src

#+RESULTS:
: None

** IDEA mapping with Color, type of galaxy, SFR, Velocity
** [?] What is the W50 velocity
